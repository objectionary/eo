# The MIT License (MIT)
#
# Copyright (c) 2016-2025 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
name: daily
'on':
  schedule:
    # Run load testing at 01:30 UTC every day
    - cron: '30 1 * * *'
jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: teatimeguest/setup-texlive-action@v3.3.4
        with:
          update-all-packages: true
          packages: scheme-basic geometry xcolor naive-ebnf microtype etoolbox
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 20
      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-jdk-20-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-jdk-20-maven-
      - run: |
          # Clean the test classes to avoid caching issues and prepare testing environment
          # without running the tests
          mvn clean install -Pqulice -PskipTests
          # Find script
          SCRIPT=${GITHUB_WORKSPACE}/src/test/scripts/test-repetition.sh
          # Check that script is exists
          if [ ! -f "${SCRIPT}" ]; then
              echo "Script ${SCRIPT} not found"
              exit 1
          fi
          # Make script runnable
          chmod +x "${SCRIPT}"
          # Test eo-parser
          "${SCRIPT}" --max 10 --folder "${GITHUB_WORKSPACE}/eo-parser"
          # Test eo-maven-plugin
          "${SCRIPT}" --max 10 --folder "${GITHUB_WORKSPACE}/eo-maven-plugin"
          # Test eo-runtime
          "${SCRIPT}" --max 10 --folder "${GITHUB_WORKSPACE}/eo-runtime" --compilation true
  report-fail:
    name: Create issue on failure
    needs: build
    if: failure() && github.event.pull_request == null
    runs-on: ubuntu-24.04
    steps:
      - uses: jayqi/failed-build-issue-action@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
