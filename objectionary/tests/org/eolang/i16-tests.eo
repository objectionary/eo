+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+tests
+package org.eolang
+version 0.56.0
+spdx SPDX-FileCopyrightText Copyright (c) 2016-2025 Objectionary.com
+spdx SPDX-License-Identifier: MIT
+unlint sparse-decoration

# This unit test is supposed to check the functionality of the corresponding object.
[] > i16-tests
  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-has-valid-bytes
    eq. > @
      42.as-i64.as-i32.as-i16.as-bytes
      00-2A

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-negative-i16-has-valid-bytes
    eq. > @
      -200.as-i64.as-i32.as-i16.as-bytes
      FF-38

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-less-true
    lt. > @
      10.as-i64.as-i32.as-i16
      50.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-less-equal
    not. > @
      lt.
        10.as-i64.as-i32.as-i16
        10.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-less-false
    not. > @
      lt.
        10.as-i64.as-i32.as-i16
        -5.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-greater-true
    gt. > @
      -200.as-i64.as-i32.as-i16
      -1000.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-greater-false
    not. > @
      gt.
        0.as-i64.as-i32.as-i16
        100.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-greater-equal
    not. > @
      gt.
        0.as-i64.as-i32.as-i16
        0.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-lte-true
    lte. > @
      -200.as-i64.as-i32.as-i16
      -100.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-lte-equal
    lte. > @
      50.as-i64.as-i32.as-i16
      50.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-lte-false
    not. > @
      lte.
        0.as-i64.as-i32.as-i16
        -10.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-gte-true
    gte. > @
      -1000.as-i64.as-i32.as-i16
      -1100.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-gte-equal
    gte. > @
      113.as-i64.as-i32.as-i16
      113.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-gte-false
    not. > @
      gte.
        0.as-i64.as-i32.as-i16
        10.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-zero-eq-to-i16-zero
    eq. > @
      0.as-i64.as-i32.as-i16
      0.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-eq-true
    eq. > @
      123.as-i64.as-i32.as-i16
      123.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-eq-false
    not. > @
      eq.
        123.as-i64.as-i32.as-i16
        42.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-one-plus-i16-one
    eq. > @
      1.as-i64.as-i32.as-i16.plus 1.as-i64.as-i32.as-i16
      2.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-plus-with-overflow
    eq. > @
      32767.as-i64.as-i32.as-i16.plus 1.as-i64.as-i32.as-i16
      -32768.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-one-minus-i16-one
    eq. > @
      1.as-i64.as-i32.as-i16.minus 1.as-i64.as-i32.as-i16
      0.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-minus-with-overflow
    eq. > @
      -32768.as-i64.as-i32.as-i16.minus 1.as-i64.as-i32.as-i16
      32767.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  2.as-i64.as-i32.as-i16.div 0.as-i64.as-i32.as-i16 > [] > throws-on-division-i16-by-i16-zero

  # This unit test is supposed to check the functionality of the corresponding object.
  # Checks that division by one returns the dividend.
  [] > tests-i16-div-by-i16-one
    eq. > @
      dividend.div 1.as-i64.as-i32.as-i16
      dividend
    -235.as-i64.as-i32.as-i16 > dividend

  # This unit test is supposed to check the functionality of the corresponding object.
  # Checks div with remainder.
  [] > tests-i16-div-with-remainder
    eq. > @
      13.as-i64.as-i32.as-i16.div -5.as-i64.as-i32.as-i16
      -2.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-div-less-than-i16-one
    lt. > @
      1.as-i64.as-i32.as-i16.div 5.as-i64.as-i32.as-i16
      1.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-multiply-by-zero
    eq. > @
      1000.as-i64.as-i32.as-i16.times 0.as-i64.as-i32.as-i16
      0.as-i64.as-i32.as-i16

  # This unit test is supposed to check the functionality of the corresponding object.
  [] > tests-i16-times-with-overflow
    eq. > @
      32767.as-i64.as-i32.as-i16.times 2.as-i64.as-i32.as-i16
      -2.as-i64.as-i32.as-i16
