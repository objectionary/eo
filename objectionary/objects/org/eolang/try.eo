+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang
+rt jvm org.eolang:eo-runtime:0.58.1
+rt node eo2js-runtime:0.0.0
+version 0.58.1
+spdx SPDX-FileCopyrightText: Copyright (c) 2016-2025 Objectionary.com
+spdx SPDX-License-Identifier: MIT

# Try, catch and finally. This object helps catch errors created by the
# `org.eolang.error` object. When being dataized, such objects will crash the program.
# Decorate them with `try` and errors will be caught by the `catch`
# abstract object here and the enclosure of the `error` will be passed to it.
# When object `try` is dataized - it tries to dataize its `main` attribute.
# If an error occurs during the dataization - it caches it and tries
# to dataize its `catch` attribute. After one of the attributes is dataized - it just dataizes
# its `finally` attribute and returns the result of dataization of `main` or `catch`
# attribute as `org.eolang.bytes`.
[main catch finally] > try ?
  # This unit test is supposed to check the functionality of the corresponding object.
  [] +> tests-catches-simple-exception
    try > @
      slice.
        "some string"
        7
        5
      true > [e]
      false

  # This unit test is supposed to check the functionality of the corresponding object.
  [] +> tests-two-nested-try-blocks
    try > @
      try
        slice.
          "some string"
          7
          5
        error e > [e]
        false
      true > [e]
      false

  # This unit test is supposed to check the functionality of the corresponding object.
  [] +> tests-try-without-error-block
    eq. > @
      try
        30.plus 2
        e > [e]
        true
      32

  # This unit test is supposed to check the functionality of the corresponding object.
  [] +> tests-try-malloc-update-catch
    eq. > @
      malloc.of
        8
        [m]
          seq > @
            *
              m.put 1
              try
                seq
                  *
                    5.div 0
                    m.put (m.plus 1)
                e > [e]
                false
              m
      1
