+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang
+version 0.56.2
+spdx SPDX-FileCopyrightText Copyright (c) 2016-2025 Objectionary.com
+spdx SPDX-License-Identifier: MIT

# Non-conditional forward and backward jumps.
# Forward jump instantly returns provided object to `g.forward` without touching
# all the code below.
# Backward jump instantly returns provided to `go.to` abstract object
#
# Forward jump may look like this:
#
# ```
# go.to
#   [g]
#     seq > @
#       *
#         g.forward true
#         stdout "Will never be printed"
# ```
#
# Backward jump may be done this way:
#
# ```
# go.to
#   [g]
#     seq > @
#       *
#         stdout "Will be printed forever"
#         g.backward
# ```
# Go to.
[] > go
  malloc.of > identifier!
    8
    m.put m.id > [m]

  [body] > to
    try > @
      body token
      [e] >>
        if. > @
          identifier.eq e.id
          e.value
          error e
      true

    [] > token
      error > backward
        jump
          to body

      [value] > jump
        identifier > id

      [res] > forward
        error > @
          jump
            res
