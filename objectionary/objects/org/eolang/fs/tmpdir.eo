+alias org.eolang.fs.dir
+alias org.eolang.fs.file
+alias org.eolang.sys.getenv
+alias org.eolang.sys.os
+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang.fs
+version 0.57.0
+spdx SPDX-FileCopyrightText: Copyright (c) 2016-2025 Objectionary.com
+spdx SPDX-License-Identifier: MIT

# Temporary directory.
# For Unix/MacOS uses the path supplied by the first environment variable
# found in the list TMPDIR, TMP, TEMP, TEMPDIR.
# If none of these are found, "/tmp" is used.
#
# For Windows uses the path reported by the Windows "GetTempPath" API function which
# takes the first environment variable in the list TMP, TEMP, USERPROFILE.
# If none of these are found, it returns the Windows directory (C:\Windows).
[] > tmpdir
  as-dir. > @
    dir
      file
        string
          [] >>!
            if. > @
              os.is-windows
              if.
                tmp.eq empty
                if.
                  temp.eq empty
                  if.
                    userprofile.eq empty
                    "C:\\Windows"
                    userprofile
                  temp
                tmp
              if.
                tmpdir.eq empty
                if.
                  tmp.eq empty
                  if.
                    temp.eq empty
                    if.
                      tempdir.eq empty
                      "/tmp"
                      tempdir
                    temp
                  tmp
                tmpdir
            getenv "TMPDIR" > tmpdir!
            getenv "TMP" > tmp!
            getenv "TEMP" > temp!
            getenv "TEMPDIR" > tempdir!
            getenv "USERPROFILE" > userprofile!
            -- > empty

  # This unit test is supposed to check the functionality of the corresponding object.
  tmpdir.exists > [] +> global-temp-dir-exists

  # This unit test is supposed to check the functionality of the corresponding object.
  tmpdir.is-directory > [] +> global-temp-dir-is-directory

  # This unit test is supposed to check the functionality of the corresponding object.
  tmpdir.path.eq tmpdir.path > [] +> returns-the-same-tmpdir

  # This unit test is supposed to check the functionality of the corresponding object.
  tmpdir.tmpfile.exists > [] +> creates-tmpfile
