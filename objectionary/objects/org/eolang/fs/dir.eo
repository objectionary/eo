+alias org.eolang.txt.sprintf
+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang.fs
+rt jvm org.eolang:eo-runtime:0.55.1
+rt node eo2js-runtime:0.0.0
+version 0.55.1
+spdx SPDX-FileCopyrightText Copyright (c) 2016-2025 Objectionary.com
+spdx SPDX-License-Identifier: MIT
+unlint rt-without-atoms
+unlint empty-object
+unlint wrong-sprintf-arguments

# Directory in the file system.
# Apparently every directory is a file.
[file] > dir
  $ > as-dir
  $.file > @
  true > is-directory

  # Makes a directory together with all required
  # parent directories and returns the created directory.
  [] > made
    as-dir. > @
      if.
        ^.exists
        ^
        seq *
          mkdir
          ^

    # Makes a directory together with all required
    # parent directories.
    # Returns `org.eolang.true` object.
    #
    # Attention! The object is for internal usage only, please
    # don't use it programmatically outside of `dir` object.
    [] > mkdir ?

  # Goes though all files in the directory, recursively
  # finding them with the `glob` provided.
  # Returns `org.eolang.tuple` of all files in the directory.
  [glob] > walk ?

  # Deletes directory and all files in it, recursively.
  # Returns the deleted directory.
  [] > deleted
    as-dir. > @
      if.
        ^.exists
        seq *
          rec-delete (walk "**").as-tuple
          ^
        ^

    # Deletes files and directories in current directory recursively.
    # Returns `true`.
    #
    # Attention! The object is for internal usage only, please
    # don't use the object programmatically outside of `dir` object.
    [tup] > rec-delete
      if. > @
        tup.length.eq 0
        true
        seq *
          tup.value.deleted
          rec-delete tup.prev

  # Creates an empty temporary file in the current directory.
  [] > tmpfile
    as-file. > @
      if.
        ^.exists
        QQ.fs.file
          touch.as-bytes
        error
          sprintf
            "Directory %s does not exist, can't create temporary file"
            * file

    # Creates an empty temporary file in the current directory and
    # returns absolute path to it as `org.eolang.string`.
    #
    # Attention! The object is for internal usage only, please
    # don't use the object programmatically outside of the `dir` object.
    [] > touch ?

  # Opens the file for I/O operations.
  # Since current file is a directory - returns an `error`.
  [mode scope] > open
    error > @
      sprintf
        "The file %s is a directory, can't open for I/O operations"
        * file
