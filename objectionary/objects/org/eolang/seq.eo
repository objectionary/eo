+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang
+version 0.54.1
+spdx SPDX-FileCopyrightText Copyright (c) 2016-2025 Objectionary.com
+spdx SPDX-License-Identifier: MIT

# Sequence.
# The object, when being dataized, dataizes all provided
# "steps" (except the last one) and returns the last one.
[steps] > seq
  if. > @
    steps.length.eq 0
    true
    if.
      steps.length.eq 1
      steps.value
      loop steps
  steps.length.plus -1 > last-index!

  # Recursive steps dataization.
  #
  # Attention! The object is for internal usage only, please
  # don't use the object programmatically outside of `seq` object.
  [tup] > loop
    if. > @
      and.
        tup.length.gt 1
        loop tup.prev
      tup.value
      or.
        (dataized tup.value).as-bool.eq --
        tup.length.eq last-index
