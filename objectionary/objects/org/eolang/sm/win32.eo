+alias org.eolang.sm.os
+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang.sm
+rt jvm org.eolang:eo-runtime:0.59.0
+rt node eo2js-runtime:0.0.0
+version 0.59.0
+spdx SPDX-FileCopyrightText: Copyright (c) 2016-2025 Objectionary.com
+spdx SPDX-License-Identifier: MIT
+unlint many-void-attributes:49
+unlint redundant-object:34
+unlint redundant-object:35
+unlint redundant-object:36
+unlint redundant-object:37
+unlint redundant-object:38
+unlint redundant-object:39
+unlint redundant-object:40
+unlint redundant-object:41
+unlint redundant-object:42
+unlint redundant-object:46
+unlint redundant-object:53
+unlint redundant-object:54

# Makes a kernel32.dll function call by name.
#
# You can access the documentation for kernel32.dll functions by visiting the
# Windows API Index (https://learn.microsoft.com/en-us/windows/win32/api/index).
# Use the search functionality to look up specific functions, such as CreateFile, ReadFile,
# WriteFile, etc.
[name args] > win32
  # Makes an actual function call to operating system
  # Returns `org.eolang.sm.win32.return` object.
  [] > @ ?
  -10 > std-input-handle
  -11 > std-output-handle
  2 > af-inet
  1 > sock-stream
  6 > ipproto-tcp
  -1 > invalid-socket
  -1 > socket-error
  -1 > inaddr-none
  02-02 > winsock-version-2-2

  [code output] > return
    output > @
    return code output > called

  # Structure for "GetSystemTime" function call.
  [year month day day-of-week hour minute second milliseconds] > system-time

  # The win32 `sockaddr_in` structure.
  [sin-family sin-port sin-addr] > sockaddr-in
    00-00-00-00-00-00-00-00 > sin-zero
    plus. > size
      plus.
        plus.
          sin-family.size
          sin-port.size
        sin-addr.size
      sin-zero.size

  # Tests Win32 inet_addr returns correct localhost (127.0.0.1) address.
  [] +> tests-returns-valid-win32-inet-addr-for-localhost
    or. > @
      os.is-windows.not
      (code. (win32 "inet_addr" (* "127.0.0.1"))).eq 16777343
