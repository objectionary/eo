+alias org.eolang.structs.list
+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang.structs
+version 0.56.2
+spdx SPDX-FileCopyrightText Copyright (c) 2016-2025 Objectionary.com
+spdx SPDX-License-Identifier: MIT

# Range - create a `list` containing a range of elements
# Here `start` must be a abstract object that must have an object `next` to get
# next element and object `lt` to compare with the `end` object.
# Every next element also must have an objects `next` and `lt`.
# The first object in the chain must have a default value
# e.g.:
#
# ```
# range
#   []
#     [num] > build
#       num > @!
#       build (@.plus 1) > next
#     build 1 > @
#   10
# ```
#
# Here the first argument is an abstract object that has a default value - 1 and
# it also has object `next`. The next object after first is decorator of
# `1.plus 1` and also has object `next`. Since these objects are ints - they have
# object `lt` by default.
[start end] > range
  list > @
    if.
      start.lt end
      appended
        * start
        start.next
      *

  # Constructor of range.
  #
  # Attention! The object is for internal usage only, please
  # don't use the object programmatically outside of `range` object.
  [acc current] > appended
    if. > @
      current.lt ^.end
      ^.appended
        acc.with current
        current.next
      acc
