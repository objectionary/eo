# The MIT License (MIT)
#
# Copyright (c) 2016-2021 Yegor Bugayenko
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+package org.eolang
+rt jvm org.eolang:eo-runtime:0.0.0

[] > bytes
  # Equals to another bytes
  [b] > eq /bool

  # Total number of bytes
  [] > size /int

  # Take a part of the line
  [start len] > part /bytes

  # Turn this chain of bytes into a string in UTF-8
  [] > as-string /string

  # Turn this chain of eight or less bytes into an integer.
  # If there are more than eight bytes, the last eight
  # bytes will be taken.
  [] > as-int /int

  # Turn this chain of eight bytes into a float.
  # If there are less or more than eight bytes, there will
  # be an error returned.
  [] > as-float /float

  # Turn this chain of one byte into a char.
  # If there are less or more than one byte, there will
  # be an error returned.
  [] > as-char /char

  # Calculate bitwise and
  [b] > and /bytes

  # Calculate bitwise or
  [b] > or /bytes

  # Calculate bitwise xor
  [b] > xor /bytes

  # Calculate bitwise not
  [] > not /bytes

  # Calculate bitwise left shift
  [x] > left /bytes

  # Calculate bitwise right shift
  [x] > right /bytes
