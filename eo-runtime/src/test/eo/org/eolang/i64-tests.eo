# The MIT License (MIT)
#
# Copyright (c) 2016-2025 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+tests
+package org.eolang
+version 0.0.0

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-has-valid-bytes
  eq. > @
    42.as-i64.as-bytes
    00-00-00-00-00-00-00-2A

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-as-bytes-is-not-equal-to-number-bytes
  not. > @
    eq.
      i64 234.as-bytes
      234.as-i64.as-bytes

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-to-i32-and-back
  eq. > @
    234.as-i64
    234.as-i64.as-i32.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > negative-i64-to-i32-and-back
  eq. > @
    -234.as-i64
    -234.as-i64.as-i32.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
3147483647.as-i64.as-i32 > [] > throws-on-converting-to-i32-if-out-of-bounds

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-less-true
  lt. > @
    10.as-i64
    50.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-less-equal
  not. > @
    lt.
      10.as-i64
      10.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-less-false
  not. > @
    lt.
      10.as-i64
      -5.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-greater-true
  gt. > @
    -200.as-i64
    -1000.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-greater-false
  not. > @
    gt.
      0.as-i64
      100.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-greater-equal
  not. > @
    gt.
      0.as-i64
      0.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-lte-true
  lte. > @
    -200.as-i64
    -100.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-lte-equal
  lte. > @
    50.as-i64
    50.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-lte-false
  not. > @
    lte.
      0.as-i64
      -10.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-gte-true
  gte. > @
    -1000.as-i64
    -1100.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-gte-equal
  gte. > @
    113.as-i64
    113.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-gte-false
  not. > @
    gte.
      0.as-i64
      10.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-zero-eq-to-i64-zero
  eq. > @
    0.as-i64
    0.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-eq-true
  eq. > @
    123.as-i64
    123.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-eq-false
  not. > @
    eq.
      123.as-i64
      42.as-i64

# Test
[] > i64-one-plus-i64-one
  eq. > @
    1.as-i64.plus 1.as-i64
    2.as-i64

# Test
[] > i64-one-minus-i64-one
  eq. > @
    1.as-i64.minus 1.as-i64
    0.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
2.as-i64.div 0.as-i64 > [] > throws-on-division-i64-by-i64-zero

# Checks that division by one returns the dividend.
[] > i64-div-by-i64-one
  -235.as-i64 > dividend
  eq. > @
    dividend.div 1.as-i64
    dividend

# Checks div with remainder
[] > i64-div-with-remainder
  eq. > @
    13.as-i64.div -5.as-i64
    -2.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-div-less-than-i64-one
  lt. > @
    1.as-i64.div 5.as-i64
    1.as-i64

# This unit test is supposed to check the functionality of the corresponding object.
[] > i64-multiply-by-zero
  eq. > @
    1000.as-i64.times 0.as-i64
    0.as-i64
