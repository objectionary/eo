# The MIT License (MIT)
#
# Copyright (c) 2016-2025 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+tests
+package org.eolang
+version 0.0.0

# This unit test is supposed to check the functionality of the corresponding object.
[] > compares-two-bools
  eq. > @
    true
    true

# This unit test is supposed to check the functionality of the corresponding object.
[] > true-as-bool
  true.as-bool > @

# This unit test is supposed to check the functionality of the corresponding object.
[] > compares-two-different-types
  not. > @
    eq.
      true
      42

# This unit test is supposed to check the functionality of the corresponding object.
[] > compares-bool-to-bytes
  and. > @
    true.eq 01-
    false.eq 00-

# This unit test is supposed to check the functionality of the corresponding object.
[] > compares-bool-to-string
  and. > @
    true.eq "\001"
    false.eq "\000"

# This unit test is supposed to check the functionality of the corresponding object.
[] > compares-bool-to-bytes-reverse
  and. > @
    01-.as-bytes.eq true
    00-.as-bytes.eq false

# This unit test is supposed to check the functionality of the corresponding object.
[] > true-not-is-false
  eq. > @
    true.not
    false

# This unit test is supposed to check the functionality of the corresponding object.
[] > true-and-false-is-false
  not. > @
    and.
      true
      false

# This unit test is supposed to check the functionality of the corresponding object.
[] > forks-on-true-condition
  eq. > @
    if.
      5.eq 5
      123
      42
    123

# This unit test is supposed to check the functionality of the corresponding object.
[] > forks-on-false-condition
  eq. > @
    if.
      5.eq 8
      123
      42
    42
