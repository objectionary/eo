# The MIT License (MIT)
#
# Copyright (c) 2016-2025 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.structs.range
+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+tests
+package org.eolang.structs
+version 0.0.0

# This unit test is supposed to check the functionality of the corresponding object.
[] > simple-range-from-one-to-ten
  range > rng
    []
      [i] > build
        i > @
        ^.build (1.plus @) > next
      build 1 > @
    10
  eq. > @
    rng
    * 1 2 3 4 5 6 7 8 9

# This unit test is supposed to check the functionality of the corresponding object.
[] > simple-range-with-floats-from-one-to-five
  range > rng
    []
      [i] > x
        i > @
        ^.x (0.5.plus @) > next
      x 1.0 > @
    5.0
  eq. > @
    rng
    * 1.0 1.5 2.0 2.5 3.0 3.5 4.0 4.5

# This unit test is supposed to check the functionality of the corresponding object.
[] > range-with-out-of-bounds
  range > rng
    []
      [num] > b
        num > @
        ^.b (5.plus @) > next
      b 1 > @
    10
  eq. > @
    rng
    * 1 6

# This unit test is supposed to check the functionality of the corresponding object.
[] > range-with-wrong-items-is-an-empty-array
  range > rng
    []
      [num] > y
        num > @
        [] > next
          42 > nothing
      y 10 > @
    1
  rng.is-empty > @
