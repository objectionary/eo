# The MIT License (MIT)
#
# Copyright (c) 2016-2024 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+tests
+package org.eolang
+version 0.0.0

# Test.
[] > understands-this-correctly
  [x] > a
    $.x > @
  eq. > @
    a 42
    42

# Test.
[] > takes-parent-object
  [x] > a
    [] > take
      ^.x > @
    take > @
  eq. > @
    a 42
    42

# Test.
[] > makes-object-a-constant
  [] > foo
    times. > @
      50
      50
  foo.@ > f!
  eq. > @
    f
    f

# Test.
[] > takes-parent-through-attribute
  42 > x
  $ > this
  [] > @
    [] > @
      [] > @
        eq. > @
          this.x
          42

# Test.
[] > throws-when-applies-to-closed-object
  [x] > a
    x > @
  a false > closed
  closed true > @

# Test.
[] > makes-deep-object-recursively
  eq. > @
    x 5
    0
  [i] > x
    if. > @
      i.lt 0
      0
      x
        i.minus 1

# Test.
[] > calculates-only-once
  eq. > @
    malloc.for
      0
      [m] > x
        [] > a
          seq > @
            *
              ^.m.put (^.m.as-number.plus 1)
              42
        a.neg.neg.neg.neg.eq 42 > @
    1

# Test.
[] > writes-cage-to-malloc
  (cage number.plus).new > f2
  eq. > @
    malloc.of
      8
      [f1] >>
        malloc.of > @
          8
          [f0] >>
            seq > @
              *
                f0.put 1
                f1.put 2
                f2.encage (f0.as-number.plus f1)
                f1.put f2
    3

# Test.
[] > recursion-without-arguments
  [n] > func
    if. > @
      n.as-number.gt 0
      seq
        *
          n.put (n.as-number.minus 1)
          ^.func n
      n
  eq. > @
    malloc.for
      4
      [m] >>
        ^.func m > @
    0

# Test.
[] > unescapes-slashes
  eq. > @
    "x\\b\\f\\u\\r\\t\\n\\'"
    78-5C-62-5C-66-5C-75-5C-72-5C-74-5C-6E-5C-27

# Test.
[] > unescapes-symbols
  eq. > @
    "\b\f\n\r\t\u27E6"
    08-0C-0A-0D-09-E2-9F-A6

# Test.
[] > compiles-correctly-with-long-duplicate-names
  [] > long-object-name
    [] > long-object-name
      [] > long-object-name
        [] > long-object-name
          [] > long-object-name
  true > @

# Test.
[] > named-inner-abstract-object
  seq > @
    *
      [] > a
        true > @

# Test.
[] > app-that-calls-func
  [] > app
    [args] > f
      1 > a
      2 > @
    f > @
      * 1 2 3
  app > output
  eq. > @
    output
    2

# Test.
[] > directly-accesses-objects-from-root
  eq. > @
    Q.org.eolang.malloc.of
      8
      [m]
        seq > @
          *
            m.put 42
            Q.org.eolang.io.stdout
              "Hello, world!"
            m.put
              m.as-number.minus 2
    40

# Test.
[] > directly-accesses-objects-from-standard-root
  eq. > @
    QQ.malloc.of
      8
      [m]
        seq > @
          *
            m.put 42
            QQ.io.stdout
              "Hello, world!"
            m.put
              m.as-number.minus 2
    40

# Test.
[] > standard-root-and-root
  QQ.io.stdout > stand-root
    "one"
  Q.org.eolang.io.stdout > root
    "one"
  eq. > @
    root
    stand-root

# Test.
[] > extract-attribute-from-decoratee
  [foo] > return
  [] > a
    ^.return > @
      plus.
        42
        1
  eq. > @
    a.foo
    43

# Test.
[] > constant-defends-against-side-effects
  [x] > inc
    seq > @
      *
        x.put
          x.as-number.plus 1
        x.as-number
  eq. > @
    malloc.for
      7
      [m] >>
        number > num
          ^.inc m > n!
        m.put > @
          times.
            num
            num
    64

# Test.
[] > parent-in-vertical-notation
  5 > m
  [] > value
    [] > @
      m. > @
        ^.
          ^
  eq. > @
    value
    5

# Test.
[] > parent-in-horizontal-notation
  5 > m
  [] > value
    [] > @
      ^.^.m > @
  eq. > @
    value
    5

# Test.
[] > phi-in-vertical-notation
  [] > value
    [] > @
      100 > @
  eq. > @
    @.
      value
    100

# Test.
[] > phi-in-horizontal-notation
  [] > value
    [] > @
      100 > @
  eq. > @
    value.@
    100

# Test.
[] > right-way-to-use-hierarchy
  # Bool mock
  [value] > pybool
    value > @
  [value] > pyint
    [x] > eq
      ^.^.pybool (^.value.eq x.value) > @
    [x] > add
      ^.^.pyint (^.value.plus x.value) > @
  ((pyint 1).add (pyint 3)).eq (pyint 4) > @

# Test.
[] > check-triple-quotes
  eq. > @
    """
    Hello

    Hello
    """
    "Hello\n\nHello"

# Test.
[] > correctly-handles-same-name-attrs-simplified
  [first second] > calc
    plus. > @
      first
      second
  eq. > @
    calc
      []
        build 1 > @
        [x] > build
          x > @
      []
        build 2 > @
        [y] > build
          y > @
    3

# Test.
[] > correctly-handles-same-name-attrs
  [f s] > calc
    plus. > @
      f.next
      s.next
  eq. > @
    calc
      []
        [x] > build
          x.plus 1 > @
          ^.build > next
            plus.
              x
              1
        build 1 > @
      []
        [y] > build
          y.plus 2 > @
          ^.build > next
            plus.
              y
              2
        build 2 > @
    9

# Nesting blah test.
[] > nesting-blah-test
  blah0 > @
  # This is the default 64+ symbols comment in front of named abstract object.
  [] > blah0
    blah1 > @
    # This is the default 64+ symbols comment in front of named abstract object.
    [] > blah1
      blah2 > @
      # This is the default 64+ symbols comment in front of named abstract object.
      [] > blah2
        blah3 > @
        # This is the default 64+ symbols comment in front of named abstract object.
        [] > blah3
          blah4 > @
          # This is the default 64+ symbols comment in front of named abstract object.
          [] > blah4
            blah5 > @
            # This is the default 64+ symbols comment in front of named abstract object.
            [] > blah5
              blah6 > @
              # This is the default 64+ symbols comment in front of named abstract object.
              [] > blah6
                blah7 > @
                # This is the default 64+ symbols comment in front of named abstract object.
                [] > blah7
                  blah8 > @
                  # This is the default 64+ symbols comment in front of named abstract object.
                  [] > blah8
                    blah9 > @
                    # This is the default 64+ symbols comment in front of named abstract object.
                    [] > blah9
                      blah10 > @
                      # This is the default 64+ symbols comment in front of named abstract object.
                      [] > blah10
                        blah11 > @
                        # This is the default 64+ symbols comment in front of named abstract object.
                        [] > blah11
                          blah12 > @
                          # This is the default 64+ symbols comment in front of named abstract object.
                          [] > blah12
                            blah13 > @
                            # This is the default 64+ symbols comment in front of named abstract object.
                            [] > blah13
                              blah14 > @
                              # This is the default 64+ symbols comment in front of named abstract object.
                              [] > blah14
                                blah15 > @
                                # This is the default 64+ symbols comment in front of named abstract object.
                                [] > blah15
                                  blah16 > @
                                  # This is the default 64+ symbols comment in front of named abstract object.
                                  [] > blah16
                                    blah17 > @
                                    # This is the default 64+ symbols comment in front of named abstract object.
                                    [] > blah17
                                      blah18 > @
                                      # This is the default 64+ symbols comment in front of named abstract object.
                                      [] > blah18
                                        blah19 > @
                                        # This is the default 64+ symbols comment in front of named abstract object.
                                        [] > blah19
                                          blah20 > @
                                          # This is the default 64+ symbols comment in front of named abstract object.
                                          [] > blah20
                                            blah21 > @
                                            # This is the default 64+ symbols comment in front of named abstract object.
                                            [] > blah21
                                              blah22 > @
                                              # This is the default 64+ symbols comment in front of named abstract object.
                                              [] > blah22
                                                blah23 > @
                                                # This is the default 64+ symbols comment in front of named abstract object.
                                                [] > blah23
                                                  blah24 > @
                                                  # This is the default 64+ symbols comment in front of named abstract object.
                                                  [] > blah24
                                                    blah25 > @
                                                    # This is the default 64+ symbols comment in front of named abstract object.
                                                    [] > blah25
                                                      blah26 > @
                                                      # This is the default 64+ symbols comment in front of named abstract object.
                                                      [] > blah26
                                                        blah27 > @
                                                        # This is the default 64+ symbols comment in front of named abstract object.
                                                        [] > blah27
                                                          blah28 > @
                                                          # This is the default 64+ symbols comment in front of named abstract object.
                                                          [] > blah28
                                                            blah29 > @
                                                            # This is the default 64+ symbols comment in front of named abstract object.
                                                            [] > blah29
                                                              blah30 > @
                                                              # This is the default 64+ symbols comment in front of named abstract object.
                                                              [] > blah30
                                                                blah31 > @
                                                                # This is the default 64+ symbols comment in front of named abstract object.
                                                                [] > blah31
                                                                  blah32 > @
                                                                  # This is the default 64+ symbols comment in front of named abstract object.
                                                                  [] > blah32
                                                                    blah33 > @
                                                                    # This is the default 64+ symbols comment in front of named abstract object.
                                                                    [] > blah33
                                                                      blah34 > @
                                                                      # This is the default 64+ symbols comment in front of named abstract object.
                                                                      [] > blah34
                                                                        blah35 > @
                                                                        # This is the default 64+ symbols comment in front of named abstract object.
                                                                        [] > blah35
                                                                          blah36 > @
                                                                          # This is the default 64+ symbols comment in front of named abstract object.
                                                                          [] > blah36
                                                                            blah37 > @
                                                                            # This is the default 64+ symbols comment in front of named abstract object.
                                                                            [] > blah37
                                                                              blah38 > @
                                                                              # This is the default 64+ symbols comment in front of named abstract object.
                                                                              [] > blah38
                                                                                blah39 > @
                                                                                # This is the default 64+ symbols comment in front of named abstract object.
                                                                                [] > blah39
                                                                                  true > @
