# The MIT License (MIT)
#
# Copyright (c) 2016-2022 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.hamcrest.assert-that
+alias org.eolang.ram
+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+junit
+package org.eolang
+version 0.0.0

[] > writes-and-slice-ram
  ram 1024 > r
  assert-that > @
    seq
      write.
        r.slice 200 13 > s
        "Hello, world!".as-bytes
      as-string.
        s.slice 0 5
    $.equal-to "Hello"

[] > writes-integer-to-ram
  ram 1024 > r
  3.as-bytes > b
  r.write 0 b > w
  assert-that > @
    and.
      w.eq TRUE
      (r.slice 0 8).as-int.eq 3
    $.equal-to TRUE

[] > several-slices-ram
  ram 1024 > r
  assert-that > @
    seq
      write.
        r.slice 10 3
        "abc".as-bytes
      write.
        r.slice 13 3
        "def".as-bytes
      as-string.
        (r.slice 10 6).slice 0 6
    $.equal-to "abcdef"

[] > intersection-writes-in-ram
  ram 64 > r
  assert-that > @
    seq
      write.
        r.slice 0 10
        "1234567890".as-bytes
      write.
        r.slice 5 10
        "-----".as-bytes
      as-string.
        (r.slice 0 10).slice 0 10
    $.equal-to "12345-----"
