# The MIT License (MIT)
#
# Copyright (c) 2016-2023 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.hamcrest.assert-that
+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+package org.eolang
+junit
+version 0.0.0

# Equal to
[] > positive-infinity-is-equal-to-one-div-zero
  assert-that > @
    positive-infinity
    $.equal-to (1.0.div 0.0)

[] > positive-infinity-eq-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf
    $.equal-to pos-inf

[] > positive-infinity-not-eq-negative-infinity
  assert-that > @
    positive-infinity
    $.not
      $.equal-to negative-infinity

[] > positive-infinity-not-eq-nan
  assert-that > @
    positive-infinity
    $.not
      $.equal-to nan

[] > positive-infinity-not-eq-int
  assert-that > @
    positive-infinity
    $.not
      $.equal-to 42

[] > positive-infinity-not-eq-float
  assert-that > @
    positive-infinity
    $.not
      $.equal-to 42.5

# Less than
[] > positive-infinity-lt-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf
    $.not
      $.less-than pos-inf

[] > positive-infinity-not-lt-negative-infinity
  assert-that > @
    positive-infinity
    $.not
      $.less-than negative-infinity

[] > positive-infinity-not-lt-nan
  assert-that > @
    positive-infinity
    $.not
      $.less-than nan

[] > positive-infinity-not-lt-int
  assert-that > @
    positive-infinity
    $.not
      $.less-than 42

[] > positive-infinity-not-lt-float
  assert-that > @
    positive-infinity
    $.not
      $.less-than 42.5

# Less or equal than
[] > positive-infinity-lte-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.lte pos-inf
    $.equal-to TRUE

[] > positive-infinity-not-lte-negative-infinity
  assert-that > @
    positive-infinity.lte negative-infinity
    $.equal-to FALSE

[] > positive-infinity-not-lte-nan
  assert-that > @
    positive-infinity.lte nan
    $.equal-to FALSE

[] > positive-infinity-not-lte-int
  assert-that > @
    positive-infinity.lte 42
    $.equal-to FALSE

[] > positive-infinity-not-lte-float
  assert-that > @
    positive-infinity.lte 42.5
    $.equal-to FALSE

# Greater than
[] > positive-infinity-gt-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf
    $.not
      $.greater-than pos-inf

[] > positive-infinity-gt-negative-infinity
  assert-that > @
    positive-infinity
    $.greater-than negative-infinity

[] > positive-infinity-not-gt-nan
  assert-that > @
    positive-infinity
    $.not
      $.greater-than nan

[] > positive-infinity-gt-int
  assert-that > @
    positive-infinity
    $.greater-than 42

[] > positive-infinity-gt-float
  assert-that > @
    positive-infinity
    $.greater-than 42.5

# Greater or equal than
[] > positive-infinity-gte-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.gte pos-inf
    $.equal-to TRUE

[] > positive-infinity-gte-negative-infinity
  assert-that > @
    positive-infinity.gte negative-infinity
    $.equal-to TRUE

[] > positive-infinity-not-gte-nan
  assert-that > @
    positive-infinity.gte nan
    $.equal-to FALSE

[] > positive-infinity-gte-int
  assert-that > @
    positive-infinity.gte 42
    $.equal-to TRUE

[] > positive-infinity-gte-float
  assert-that > @
    positive-infinity.gte 42.5
    $.equal-to TRUE

# Times
[] > positive-infinity-times-float-zero
  assert-that > @
    as-bytes.
      positive-infinity.times 0.0
    $.equal-to nan.as-bytes

[] > positive-infinity-times-neg-float-zero
  assert-that > @
    as-bytes.
      positive-infinity.times -0.0
    $.equal-to nan.as-bytes

[] > positive-infinity-times-int-zero
  assert-that > @
    as-bytes.
      positive-infinity.times 0
    $.equal-to nan.as-bytes

[] > positive-infinity-times-nan
  nan > not-a-number!
  assert-that > @
    as-bytes.
      positive-infinity.times not-a-number
    $.equal-to not-a-number.as-bytes

[] > positive-infinity-times-negative-infinity
  negative-infinity > neg-inf!
  assert-that > @
    positive-infinity.times neg-inf
    $.equal-to neg-inf

[] > positive-infinity-times-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.times pos-inf
    $.equal-to pos-inf

[] > positive-infinity-times-positive-float
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.times 42.5
    $.equal-to pos-inf

[] > positive-infinity-times-positive-int
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.times 42
    $.equal-to pos-inf

[] > positive-infinity-times-negative-float
  assert-that > @
    positive-infinity.times -42.5
    $.equal-to negative-infinity

[] > positive-infinity-times-negative-int
  assert-that > @
    positive-infinity.times -42
    $.equal-to negative-infinity

[] > positive-infinity-times-multiple-positive-numbers
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.times 25 11.2 51
    $.equal-to pos-inf

[] > positive-infinity-times-two-negative-numbers
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.times -11.2 -5
    $.equal-to pos-inf

[] > positive-infinity-times-three-negative-numbers
  assert-that > @
    positive-infinity.times -11.2 -5 -3
    $.equal-to negative-infinity

[] > positive-infinity-times-multiple-numbers-with-nan
  nan > not-a-number!
  assert-that > @
    (positive-infinity.times -25 not-a-number 51).as-bytes
    $.equal-to not-a-number.as-bytes

[] > positive-infinity-times-multiple-numbers-with-float-zero
  assert-that > @
    (positive-infinity.times -25 0.0 51).as-bytes
    $.equal-to nan.as-bytes

[] > positive-infinity-times-multiple-numbers-with-neg-float-zero
  assert-that > @
    (positive-infinity.times -25 -0.0 51).as-bytes
    $.equal-to nan.as-bytes

[] > positive-infinity-times-multiple-numbers-with-int-zero
  assert-that > @
    (positive-infinity.times -25 0 51).as-bytes
    $.equal-to nan.as-bytes

[] > positive-infinity-times-multiple-infinites
  positive-infinity > pos-inf!
  negative-infinity > neg-inf!
  assert-that > @
    pos-inf.times neg-inf pos-inf neg-inf neg-inf
    $.equal-to neg-inf

# Plus
[] > positive-infinity-plus-nan
  nan > not-a-number!
  assert-that > @
    as-bytes.
      positive-infinity.plus not-a-number
    $.equal-to not-a-number.as-bytes

[] > positive-infinity-plus-negative-infinity
  assert-that > @
    as-bytes.
      positive-infinity.plus negative-infinity
    $.equal-to nan.as-bytes

[] > positive-infinity-plus-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.plus pos-inf
    $.equal-to pos-inf

[] > positive-infinity-plus-positive-float
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.plus 42.5
    $.equal-to pos-inf

[] > positive-infinity-plus-multiple-floats
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.plus 42.5 -22.5 12.2
    $.equal-to pos-inf

[] > positive-infinity-plus-positive-int
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.plus 42
    $.equal-to pos-inf

[] > positive-infinity-plus-multiple-numbers
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.plus 42 -22.1 30
    $.equal-to pos-inf

[] > positive-infinity-plus-multiple-numbers-with-nan
  nan > not-a-number!
  assert-that > @
    (positive-infinity.plus 42 not-a-number 30).as-bytes
    $.equal-to not-a-number.as-bytes

[] > positive-infinity-plus-multiple-numbers-with-negative-infinity
  assert-that > @
    (positive-infinity.plus 42 negative-infinity 30).as-bytes
    $.equal-to nan.as-bytes

# Negation
[] > positive-infinity-neg-is-negative-infinity
  assert-that > @
    positive-infinity.neg
    $.equal-to negative-infinity

# Minus
[] > positive-infinity-minus-nan
  nan > not-a-number!
  assert-that > @
    as-bytes.
      positive-infinity.minus not-a-number
    $.equal-to not-a-number.as-bytes

[] > positive-infinity-minus-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    as-bytes.
      pos-inf.minus pos-inf
    $.equal-to nan.as-bytes

[] > positive-infinity-minus-negative-infinity
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.minus negative-infinity
    $.equal-to pos-inf

[] > positive-infinity-minus-positive-float
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.minus 42.5
    $.equal-to pos-inf

[] > positive-infinity-minus-positive-int
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.minus 42
    $.equal-to pos-inf

[] > positive-infinity-minus-negative-float
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.minus -42.5
    $.equal-to pos-inf

[] > positive-infinity-minus-negative-int
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.minus -42
    $.equal-to pos-inf

[] > positive-infinity-minus-multiple-floats
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.minus 42.5 -22.5 12.2
    $.equal-to pos-inf

[] > positive-infinity-minus-multiple-numbers
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.minus 42 -22.1 30
    $.equal-to pos-inf

[] > positive-infinity-minus-multiple-numbers-with-nan
  nan > not-a-number!
  assert-that > @
    (positive-infinity.minus 42 not-a-number 30).as-bytes
    $.equal-to not-a-number.as-bytes

[] > positive-infinity-minus-multiple-numbers-with-negative-infinity
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.minus 42 negative-infinity 30
    $.equal-to pos-inf

[] > positive-infinity-minus-multiple-numbers-with-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    (pos-inf.minus 42 pos-inf 30).as-bytes
    $.equal-to nan.as-bytes

# Division
[] > positive-infinity-div-float-zero
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.div 0.0
    $.equal-to pos-inf

[] > positive-infinity-div-int-zero
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.div 0
    $.equal-to pos-inf

[] > positive-infinity-div-nan
  nan > not-a-number!
  assert-that > @
    as-bytes.
      positive-infinity.div not-a-number
    $.equal-to not-a-number.as-bytes

[] > positive-infinity-div-negative-infinity
  assert-that > @
    as-bytes.
      positive-infinity.div negative-infinity
    $.equal-to nan.as-bytes

[] > positive-infinity-div-positive-infinity
  positive-infinity > pos-inf!
  assert-that > @
    as-bytes.
      pos-inf.div pos-inf
    $.equal-to nan.as-bytes

[] > positive-infinity-div-positive-float
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.div 42.5
    $.equal-to pos-inf

[] > positive-infinity-div-positive-int
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.div 42
    $.equal-to pos-inf

[] > positive-infinity-div-negative-float
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.div -42.5
    $.equal-to pos-inf

[] > positive-infinity-div-negative-int
  positive-infinity > pos-inf!
  assert-that > @
    pos-inf.div -42
    $.equal-to pos-inf

# Bytes
[] > positive-infinity-as-bytes-is-valid
  assert-that > @
    positive-infinity.as-bytes
    $.equal-to (1.0.div 0.0).as-bytes
