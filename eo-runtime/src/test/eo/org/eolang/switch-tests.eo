# The MIT License (MIT)
#
# Copyright (c) 2016-2022 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

+alias org.eolang.hamcrest.assert-that
+architect yegor256@gmail.com
+home https://github.com/objectionary/eo
+junit
+package org.eolang
+version 0.0.0

[] > switch-simple-case
  assert-that > @
    switch
      *
        FALSE
        "1"
      *
        TRUE
        "2"
    $.equal-to "2"

[] > switch-strings-case
  memory "swordfish" > password
  assert-that > @
    switch
      *
        password.eq "swordfish"
        "password is correct!"
      *
        password.eq ""
        "empty password is not allowed"
      *
        FALSE
        "password is wrong"
    $.equal-to "password is correct!"

[] > switch-with-several-true-cases
  assert-that > @
    switch
      *
        TRUE
        "TRUE1"
      *
        FALSE
        "FALSE"
      *
        TRUE
        "TRUE2"
    $.equal-to "TRUE1"

[] > switch-with-all-false-cases
  assert-that > @
    switch
      *
        FALSE
        "FALSE1"
      *
        FALSE
        "FALSE2"
    $.equal-to TRUE

[] > switch-case-with-error
  try > @
    switch
    [ex]
      assert-that > @
        ex
        $.equal-to "switch cases are empty"
    nop

[] > switch-complex-case
  [] > c1
    FALSE > @
  [] > c2
    "1".eq "2" > @
  [] > c3
    TRUE > @
  assert-that > @
    switch
      *
        []
          c1 > @
        22.0
      *
        []
          c2 > @
        0.0
      *
        []
          c3 > @
        []
          "true case" > @
    $.equal-to "true case"
