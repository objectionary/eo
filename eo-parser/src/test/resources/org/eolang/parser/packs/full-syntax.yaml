xsls: []
tests:
  - /program/license[text()!='']
  - /program/metas[count(meta)=4]
  - /program/metas/meta[head='foo' and tail='']
  - //o[@base='bool']
  - //o[@base='string']
  - //o[@base='string' and text()='\t']
  - //o[@base='float' and text()='500.43']
  - //o[@base='int' and text()='31']
  - //o[@base='string' and text()='Hello, друг!']
  - //o[@name='hello' and @const]
  - //o[@as='i']
  - //o[@base='&']
  - //o[@base='.<']
  - //o[@base='.five']
  - //objects[not(.//o[@name=''])]
  - //o[@atom and @name='atom' and count(o)=2 and o[@vararg and @name='a']]
  - //o[@base='float' and text()='-2400.0']
  - //o[@base='float' and text()='7.33E-10']
eo: |
  # The purpose of this test case is to make
  # sure all possible syntax scenarios can
  # be parsed by the ANTLR

  +alias org.example.foo
  +alias Test Test
  +bar Some text
  +foo

  500.43.@ > one

  # This is just a simple string
  "Hello, друг!" > hello!

  [tt a...] > atom /int

  # This is very good object
  [x] > first
    x > @
    second > hello
      $.plus.@ 5.< > i
      third:foo > x...!
        f 12 false
          (((t' 22) r:t 8.54 "yes".< "\t").print 88 0x1f):hey TRUE.< FALSE > a!
            # This object is also very good
            []
              Q.x.f.d Q Q
              QQ.y QQ
              &.@.< > t
              ^.@.hey > you...
              Q
              QQ
            ...kid.^.^
            "家"
      f':u
        z'
          z 5
            ...z
      a.
        b.
          c.
            42
          d.
        e.
          f.
      ^.
        ^.
          c
      $.
        a.
          b
      @.
        b
    oops

  [] > obj
    "some" > @
    [] > foo
      ^.@ > @

  # Comments are allowed only in front of top-level objects
  []
    one.two.three.four.five
      t.<
    .two "hello!"
    .three > a1
    .four (a b c') > a2
    .five > a3

  test
    me
      now:i (f (f (f (f 1)))).f

  [] > ooo
    # This is one
    [] > o-1 /?

    # This is two
    [] > o2

  -2.4E3 > x

  7.33e-10 > y
