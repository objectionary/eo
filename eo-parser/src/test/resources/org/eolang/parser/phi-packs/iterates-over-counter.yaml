# The MIT License (MIT)
#
# Copyright (c) 2016-2025 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
input: |
  # No comments.
  [] > iterates-over-simple-counter
    memory 0 > x
    and. > @
      eq.
        x.write 5
        5
      eq.
        while.
          x.as-int.lt 10
          [i]
            x.write > @
              x.as-int.plus 1
        11
sweet: |-
  {⟦
    iterates-over-simple-counter ↦ ⟦
      x ↦ Φ̇.memory(0),
      φ ↦ ξ.x.write(5).eq(5).and(
        ξ.x.as-int.lt(10).while(
          ⟦
            i ↦ ∅,
            φ ↦ ξ.ρ.x.write(ξ.ρ.x.as-int.plus(1))
          ⟧
        ).eq(11)
      )
    ⟧
  ⟧}
salty: |-
  {
    ⟦
      iterates-over-simple-counter ↦ ⟦
        x ↦ Φ.org.eolang.memory(
          α0 ↦ Φ.org.eolang.number(
            α0 ↦ Φ.org.eolang.bytes(
              α0 ↦ ⟦ Δ ⤍ 00-00-00-00-00-00-00-00 ⟧
            )
          )
        ),
        φ ↦ ξ.x.write(
          α0 ↦ Φ.org.eolang.number(
            α0 ↦ Φ.org.eolang.bytes(
              α0 ↦ ⟦ Δ ⤍ 40-14-00-00-00-00-00-00 ⟧
            )
          )
        ).eq(
          α0 ↦ Φ.org.eolang.number(
            α0 ↦ Φ.org.eolang.bytes(
              α0 ↦ ⟦ Δ ⤍ 40-14-00-00-00-00-00-00 ⟧
            )
          )
        ).and(
          α0 ↦ ξ.x.as-int.lt(
            α0 ↦ Φ.org.eolang.number(
              α0 ↦ Φ.org.eolang.bytes(
                α0 ↦ ⟦ Δ ⤍ 40-24-00-00-00-00-00-00 ⟧
              )
            )
          ).while(
            α0 ↦ ⟦
              i ↦ ∅,
              φ ↦ ξ.ρ.x.write(
                α0 ↦ ξ.ρ.x.as-int.plus(
                  α0 ↦ Φ.org.eolang.number(
                    α0 ↦ Φ.org.eolang.bytes(
                      α0 ↦ ⟦ Δ ⤍ 3F-F0-00-00-00-00-00-00 ⟧
                    )
                  )
                )
              )
            ⟧
          ).eq(
            α0 ↦ Φ.org.eolang.number(
              α0 ↦ Φ.org.eolang.bytes(
                α0 ↦ ⟦ Δ ⤍ 40-26-00-00-00-00-00-00 ⟧
              )
            )
          )
        )
      ⟧
    ⟧
  }
