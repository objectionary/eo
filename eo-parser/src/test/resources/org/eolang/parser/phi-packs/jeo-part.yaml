# The MIT License (MIT)
#
# Copyright (c) 2016-2025 Objectionary.com
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
---
input: |
  +package org.eolang.benchmark

  # No comments.
  [] > j$A
    32 > access
    "java/lang/Object" > supername
    * > interfaces
      "org/eolang/benchmark/F"
sweet: |-
  {⟦
    org ↦ ⟦
      eolang ↦ ⟦
        benchmark ↦ ⟦
          j$A ↦ ⟦
            access ↦ 32,
            supername ↦ "java/lang/Object",
            interfaces ↦ Φ̇.tuple(Φ̇.tuple.empty, "org/eolang/benchmark/F")
          ⟧,
          λ ⤍ Package
        ⟧,
        λ ⤍ Package
      ⟧,
      λ ⤍ Package
    ⟧
  ⟧}
salty: |-
  {
    ⟦
      org ↦ ⟦
        eolang ↦ ⟦
          benchmark ↦ ⟦
            j$A ↦ ⟦
              access ↦ Φ.org.eolang.number(
                α0 ↦ Φ.org.eolang.bytes(
                  α0 ↦ ⟦ Δ ⤍ 40-40-00-00-00-00-00-00 ⟧
                )
              ),
              supername ↦ Φ.org.eolang.string(
                α0 ↦ Φ.org.eolang.bytes(
                  α0 ↦ ⟦ Δ ⤍ 6A-61-76-61-2F-6C-61-6E-67-2F-4F-62-6A-65-63-74 ⟧
                )
              ),
              interfaces ↦ Φ.org.eolang.tuple(
                α0 ↦ Φ.org.eolang.tuple.empty,
                α1 ↦ Φ.org.eolang.string(
                  α0 ↦ Φ.org.eolang.bytes(
                    α0 ↦ ⟦ Δ ⤍ 6F-72-67-2F-65-6F-6C-61-6E-67-2F-62-65-6E-63-68-6D-61-72-6B-2F-46 ⟧
                  )
                )
              )
            ⟧,
            λ ⤍ Package
          ⟧,
          λ ⤍ Package
        ⟧,
        λ ⤍ Package
      ⟧
    ⟧
  }
