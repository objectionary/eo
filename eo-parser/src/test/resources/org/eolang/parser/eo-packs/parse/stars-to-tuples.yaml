# SPDX-FileCopyrightText: Copyright (c) 2016-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
sheets:
  - /org/eolang/parser/parse/wrap-method-calls.xsl
  - /org/eolang/parser/parse/stars-to-tuples.xsl
asserts:
  - /object/o[count(o)=9]
  - /object/o[@name='main' and o[1][@base='Î¾' and @name='xiðŸŒµ']]
  - /object/o[count(//o[@star])=0]
  # first
  - //o[@base='Î¦.org.eolang.tuple.empty' and @line=3 and @name='xs']
  # second
  - //o[@base='Î¦.org.eolang.tuple' and @line=4 and @name='xl']/o[1][@base='Î¦.org.eolang.tuple.empty']
  - //o[@base='Î¦.org.eolang.tuple' and @line=4 and @name='xl']/o[2][@base='Î¦.org.eolang.number']
  - //o[@base='Î¦.org.eolang.tuple' and @line=4 and @name='xl']/o[3][@base='Î¦.org.eolang.number']/o[@base='Î¦.org.eolang.bytes']/o[1][@hex and text()='1']
  # third
  - //o[@base='Î¦.org.eolang.tuple' and @line=5]/o[1][@base='Î¦.org.eolang.tuple']/o[1][@base='Î¦.org.eolang.tuple.empty']
  - //o[@base='Î¦.org.eolang.tuple' and @line=5]/o[1][@base='Î¦.org.eolang.tuple']/o[2][@base='Î¦.org.eolang.number']
  - //o[@base='Î¦.org.eolang.tuple' and @line=5]/o[1][@base='Î¦.org.eolang.tuple']/o[3][@base='Î¦.org.eolang.number']/o[@base='Î¦.org.eolang.bytes']/o[1][@hex and text()='1']
  - //o[@base='Î¦.org.eolang.tuple' and @line=5]/o[2][@base='Î¦.org.eolang.number']
  - //o[@base='Î¦.org.eolang.tuple' and @line=5]/o[3][@base='Î¦.org.eolang.number']/o[@base='Î¦.org.eolang.bytes']/o[1][@hex and text()='2']
  # fourth
  - //o[@base='.empty' and @line=6]/o[@base='Î¦.org.eolang.tuple.empty']
  # fifth
  - //o[@base='Î¦.org.eolang.tuple' and @line=7]/o[1][@base='Î¦.org.eolang.tuple']/o[1][@base='Î¦.org.eolang.tuple']/o[1][@base='Î¦.org.eolang.tuple.empty']
  - //o[@base='Î¦.org.eolang.tuple' and @line=7]/o[1][@base='Î¦.org.eolang.tuple']/o[1][@base='Î¦.org.eolang.tuple']/o[2][@base='.c']
  - //o[@base='Î¦.org.eolang.tuple' and @line=7]/o[1][@base='Î¦.org.eolang.tuple']/o[1][@base='Î¦.org.eolang.tuple']/o[3][@base='Î¦.org.eolang.number']/o[@base='Î¦.org.eolang.bytes']/o[@hex and text()='1']
  - //o[@base='Î¦.org.eolang.tuple' and @line=7]/o[1][@base='Î¦.org.eolang.tuple']/o[2][@base='.f']
  - //o[@base='Î¦.org.eolang.tuple' and @line=7]/o[1][@base='Î¦.org.eolang.tuple']/o[3][@base='Î¦.org.eolang.number']/o[@base='Î¦.org.eolang.bytes']/o[@hex and text()='2']
  - //o[@base='Î¦.org.eolang.tuple' and @line=7]/o[2][@base='.i']
  - //o[@base='Î¦.org.eolang.tuple' and @line=7]/o[3][@base='Î¦.org.eolang.number']/o[@base='Î¦.org.eolang.bytes']/o[@hex and text()='3']
  # sixth
  - //o[@base='.elements']/o[@base='arr']/o[@base='Î¦.org.eolang.tuple.empty']
  # seventh
  - //o[@base='.reduced']/o[@base='list']
  - //o[@base='.reduced']/o[@base='Î¦.org.eolang.tuple.empty']
  - //o[@base='.reduced']/o[not(@base)]/o[@base='âˆ…' and @name='x']
input: |
  # Main.
  [] > main
    * > xs
    * 1 > xl
    * 1 2 > xxl
    *.empty > empty
    * > tup
      a.b.c
      d.e.f
      g.h.i
    (arr *).elements > elm
    list
    .reduced > y
      *
      [x]
    * (* 1 2) (* 3 4) (* 5 6) > last
