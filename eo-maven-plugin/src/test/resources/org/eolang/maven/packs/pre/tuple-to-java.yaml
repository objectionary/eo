xsls:
  - /org/eolang/parser/stars-to-tuples.xsl
  - /org/eolang/parser/stars-to-tuples.xsl
  - /org/eolang/parser/stars-to-tuples.xsl
  - /org/eolang/parser/wrap-method-calls.xsl
  - /org/eolang/parser/add-default-package.xsl
  - /org/eolang/maven/pre/classes.xsl
  - /org/eolang/maven/pre/attrs.xsl
  - /org/eolang/maven/pre/data.xsl
  - /org/eolang/maven/pre/to-java.xsl
tests:
  - /program/errors[count(*)=0]
  - //java[contains(text(), 'Phi ret = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();')]
  - //java[contains(text(), '  Phi ret_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();')]
  - //java[contains(text(), '    Phi ret_1_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();')]
  - //java[contains(text(), '      Phi ret_1_1_1_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();')]
  - //java[contains(text(), '      Phi ret_1_1_1 = new PhMethod(ret_1_1_1_base, "empty");')]
  - //java[contains(text(), '  Phi ret_2 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();')]
  - //java[contains(text(), '    Phi ret_2_1 = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();')]
  - //java[contains(text(), '      Phi ret_2_1_1_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();')]
  - //java[contains(text(), '      Phi ret_2_1_1 = new PhMethod(ret_2_1_1_base, "empty");')]
  - //java[contains(text(), '  Phi ret_2_base = Phi.Φ.attr("org").get().attr("eolang").get().attr("tuple").get();')]
  - //java[contains(text(), '  Phi ret_2 = new PhMethod(ret_2_base, "empty");')]
eo: |
  # This is the default 64+ symbols comment in front of named abstract object.
  [] > foo
    * 1 2 (* 3 4) > @

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > bar
    zz 42 * > tt

  # This is the default 64+ symbols comment in front of named abstract object.
  [] > baz
    """
    абвгд
    """ > @
