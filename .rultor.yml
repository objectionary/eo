# SPDX-FileCopyrightText: Copyright (c) 2016-2025 Objectionary.com
# SPDX-License-Identifier: MIT
---
# yamllint disable rule:line-length
architect:
  - yegor256
ec2:
  type: t2.2xlarge
docker:
  image: yegor256/rultor-image:1.24.0
assets:
  settings.xml: yegor256/objectionary-secrets#settings.xml
  pubring.gpg: yegor256/objectionary-secrets#pubring.gpg
  secring.gpg: yegor256/objectionary-secrets#secring.gpg
install: |
  sudo apt-get install --yes python3-pygments
  sudo pip3 install pygments
  javac -version
  pdd --file=/dev/null
  gem install pdd
  gem install texsc:0.6.0
  gem install texqc:0.6.0
merge:
  script: |
    mvn clean install -DskipTests -Pqulice --errors -Dstyle.color=never
release:
  pre: false
  script: |-
    [[ "${tag}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] || exit -1

    mvn flatten:flatten
    mvn versions:set "-DnewVersion=${tag}" -Dstyle.color=never
    sed -i "s/npm install -g eolang@[0-9]\+\.[0-9]\+\.[0-9]\+/npm install -g eolang@${tag}/g" README.md
    git commit -am "${tag}"
    mvn clean install -DskipTests -Dinvoker.skip
    mvn clean deploy -DskipTests -Pobjectionary -Psonatype --errors --settings ../settings.xml -Dstyle.color=never

    mkdir /tmp/objectionary
    cp -R eo-runtime/src/main/eo /tmp/objectionary/objects
    cp eo-parser/target/classes/XMIR.xsd /tmp
    branch=$(git rev-parse --abbrev-ref HEAD)
    git checkout gh-pages
    git reset --hard
    sudo git config --global --add safe.directory "$(pwd)"
    sudo /bin/bash -c "cd '$(pwd)'; git clean -fd"
    cp /tmp/XMIR.xsd .
    mkdir -p xsd
    cp XMIR.xsd "xsd/XMIR-${tag}.xsd"
    git add XMIR.xsd "xsd/XMIR-${tag}.xsd"
    git commit -am "XMIR XSD ${tag}"
    rm -rf objectionary
    cp -R /tmp/objectionary .
    find objectionary -name '*.eo' | xargs sed -i "s/jvm org.eolang:eo-runtime:0\.0\.0/jvm org.eolang:eo-runtime:${tag}/g"
    find objectionary -name '*.eo' | xargs sed -i "s/version 0\.0\.0/version ${tag}/g"
    git add objectionary
    find objectionary -name '*.eo' > objectionary.lst
    git add objectionary.lst
    git commit -am "objectionary ${tag}"
    git checkout "${branch}"
